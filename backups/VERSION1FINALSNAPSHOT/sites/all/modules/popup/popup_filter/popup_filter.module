<?php
// $Id:



/* ----- Hook implementation ---- */



/**
 * Implementation of hook_filter
 */
function popup_filter_filter($op, $delta =  0, $format = -1, $text = ''){

  switch($op) {
    case 'list':
      return array(t('Popup content filter'));

    case 'description':
      return t('Replaces [popup] tags with popup content');

    case 'settings':
      break;

    case 'no cache':
      return TRUE;

    case 'prepare':
      return $text;

    case 'process':
      return popup_filter_process_text($text);

    default:
      return $text;
  }

}



/* ---- Processing ---- */



/**
 * Implementation of hook_filter_tips
 */
function popup_filter_filter_tips($delta, $format, $long = FALSE) {
  return '[popup] tags are converted into popup content';
}



/**
 * Replaces all [popup] tags with suitable html
 */
function popup_filter_process_text($text){

  $tagPattern = '/\[popup[^\[]+\]/';
  $found = array();
  preg_match_all($tagPattern, $text, $found);

  // Replace each found tag with its generated HTML
  foreach($found[0] as $tag){
    $text = str_replace($tag, popup_filter_process_tag($tag), $text);
  }

  return $text;
}



/**
 * Processes a popup tag
 */
function popup_filter_process_tag($tag){

  module_load_include('inc', 'popup', 'processing');

  $attributes = _popup_tag_attributes($tag);

  // Do not show unsupported click-activated popups
  if (variable_get('popup-css-only', FALSE)){
    $attributes['activate'] == 'hover';
    watchdog('Warning', 'Click-activated popup changed to hover:<p>'.$tag.'</p><em>Popup module is in CSS-only mode</em>');
    return '';
  }

  // Call the correct content loader for each popup type 
  switch(TRUE){
    case $attributes['text']: return _popup_text($attributes);
    case $attributes['node']: return _popup_node($attributes);
    case $attributes['block']: return _popup_block($attributes);
    case $attributes['form']: return _popup_form($attributes);
    case $attributes['php']: return _popup_php($attributes);
    case $attributes['menu']: return _popup_menu($attributes);
    case $attributes['view']: return _popup_view($attributes);
  }
}





