<?php
// $Id:



/* ---- Hook implementation ---- */



/**
 * Implementation of hook_form_alter
 * Adds UI settings to popup filter settings page
 */
function popup_block_form_alter(&$form, $form_state, $form_id){

  if($form_id == 'block_admin_configure' && $form['module']['#value'] != 'popup_menu'){

    $settings = _popup_block_settings();
    $block_settings = $settings[$form['module']['#value'].':'.$form['delta']['#value']];

    $format_options = array_keys(_popup_ui_formatter_settings());
    array_unshift($format_options, 'Default');
    $display_format_options = array_combine($format_options, $format_options);

    $form['popup'] = array(
      '#type' => 'fieldset',
      '#title' => t('Block popup settings'),
      '#collapsible' => 1,

      'popup-block' => array(
        '#default_value' => $block_settings['active'],
        '#description' => t('This will render the block with the body initially invisible. When a user hovers over or clicks on the title, the body is displayed.'),
        '#title' => t('Display this block as a popup'),
        '#type' => 'checkbox',
      ),
  
      'popup-block-display-format' => array(
        '#default_value' => $settings['display-format'],
        '#title' => 'Display format',
        '#type' => 'select',
        '#options' => $display_format_options,
        '#description' => t('Select the format in which to display popups. You may manage popup formats !here.', array('!here' => l('here', 'admin/settings/popup/formats'))),
      ),

    );
    
    $form['submit']['#weight'] = 10;
    $form['#submit'][] = 'popup_block_form_submit';
  }

}



/**
 * Implementation of hook_theme
 */
function popup_block_theme() {

  return array(
    'blocks' => array(
      'arguments' => array('region', FALSE),
      'function' => 'popup_block_blocks',
    ),
  );

  return $theme;
}



/* ---- Themeing hooks ---- */



function popup_block_blocks($region) {

  $output = '';
  $settings = _popup_block_settings();

  module_load_include('inc', 'popup', 'processing');
  $formats = _popup_ui_formatter_settings();

  if ($list = block_list($region)) {
    foreach ($list as $key => $block) {

      $block_settings = $settings[$block->module.':'.$block->delta];
      $attributes = $block_settings['display-format'] != 'Default'
        ? $formats[$block_settings['display-format']]
        : array();

      if ($block_settings && $block_settings['active']){

        $output .= _popup_element(
          $block->subject,
          $block->content,
          $attributes, 
          _classes($attributes)
        );
        
      } else {
        $output .= theme('block', $block);
      }
    }
  }

  // Add any content assigned to this region through drupal_set_content() calls.
  $output .= drupal_get_content($region);

  return $output;
}



/* ---- Forms ---- */



function popup_block_form_submit(&$form, &$form_state){

  $settings = _popup_block_settings();
  $values = $form_state['values'];
  
  $settings[$values['module'].':'.$values['delta']] = array(
    'active' => $values['popup-block'],
    'display-format' => $values['popup-block-display-format'],
  );

  _popup_block_settings($settings);
}



/* ---- Settings ---- */



function _popup_block_settings($new_settings = FALSE){

  static $settings = FALSE;
  if ($new_settings){
    $settings = $new_settings;
    variable_set('popup-block-settings', $settings);
  }

  if (!$settings){
    $settings = variable_get('popup-block-settings', array());
  }

  return $settings;
}








